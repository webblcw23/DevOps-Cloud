trigger:
  branches:
    include:
    - none

pool:
  vmImage: 'ubuntu-latest'

variables:
  ACR_NAME: 'rangers-acr-docker'
  IMAGE_NAME: 'rangersapp'
  DOCKER_IMAGE: '$(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest'


steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore RangersApp'
  inputs:
    command: 'restore'
    projects: 'RangersApp/Rangers.Web.csproj'

- task: DotNetCoreCLI@2
  displayName: 'Build RangersApp'
  inputs:
    command: 'build'
    projects: 'RangersApp/Rangers.Web.csproj'
    arguments: '--configuration Release'

- task: DotNetCoreCLI@2
  displayName: 'Test RangersApp'
  inputs:
    command: 'test'
    projects: 'RangersApp/Rangers.Web.csproj'


- task: Docker@2
  inputs:
    containerRegistry: 'rangers-acr-docker'  # My custom set service connection name
    repository: '$(IMAGE_NAME)'
    command: 'buildAndPush'
    tags: |
      latest

- task: TerraformInstaller@1
  displayName: 'Install Terraform'
  inputs:
    terraformVersion: '1.7.5'  # or whatever version you prefer

- task: AzureCLI@2
  displayName: 'Inject Terraform Auth Env Vars'
  inputs:
    azureSubscription: 'rangers-acr-service-connection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$servicePrincipalId"
      echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET]$servicePrincipalKey"
      echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$subscriptionId"
      echo "##vso[task.setvariable variable=ARM_TENANT_ID]$tenantId"

- script: |
    echo "Client ID: $ARM_CLIENT_ID"
    echo "Tenant ID: $ARM_TENANT_ID"
  displayName: 'Debug Env Vars'


- script: |
    echo "ARM CLIENT ID: $ARM_CLIENT_ID"
    echo "ARM CLIENT SECRET: $ARM_CLIENT_SECRET"
    echo "ARM SUBSCRIPION: $ARM_SUBSCRIPTION_ID"
    echo "ARM TENANT ID: $ARM_TENANT_ID"


- script: |
    terraform init
    terraform plan \
      -var="client_id=$(ARM_CLIENT_ID)" \
      -var="client_secret=$(ARM_CLIENT_SECRET)" \
      -var="subscription_id=$(ARM_SUBSCRIPTION_ID)" \
      -var="tenant_id=$(ARM_TENANT_ID)"
  displayName: 'Terraform Init and Plan'
  workingDirectory: 'RangersApp/terraform'

- publish: tfplan.out
  artifact: terraform-plan

- script: 
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Write-Host "Terraform Apply would be here!"'

# - stage: TerraformApply
#  dependsOn: TerraformPlan
#  jobs:
#    - job: Apply
#      pool:
#        vmImage: 'ubuntu-latest'
#      steps:
#        - checkout: self

#        - task: AzureCLI@2
#          inputs:
#            azureSubscription: 'rangers-acr-service-connection' # My custom set service connection name
#            scriptType: 'bash'
#            scriptLocation: 'inlineScript'
#            inlineScript: |
#              cd terraform
#              terraform init
#              terraform apply -auto-approve tfplan.out
